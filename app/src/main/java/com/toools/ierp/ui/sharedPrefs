val sharedPreferences = getSharedPreferences("datos", Context.MODE_PRIVATE)
val editor = sharedPreferences.edit()

val gson = Gson()
val json = gson.toJson(data)
editor.putString("datos_login", json)
editor.apply()

fun recuperarObjeto(): LoginModel {
    val sharedPreferences = requireContext().getSharedPreferences("datos", Context.MODE_PRIVATE)
    val login = sharedPreferences.getString("datos_login", null)


    val gson = Gson()
    return  gson.fromJson (login, LoginModel::class.java)
}


//mas corto
                    val edit = prefs.edit()
edit.putString(ConstantHelper.usuarioLogin, Gson().toJson(response.data))
edit.apply

           usuario = Gson().fromJson(
                prefs.getString(ConstantHelper.usuarioLogin, null),
                LoginResponse::class.java
            )




            DESDE FRAGMENT

            usuarioPrefs = Gson().fromJson(
                                IerpApp.getInstance().prefs.getString(ConstantHelper.usuarioLogin, null),
                                LoginResponse::class.java
                            )

            usuarioPrefs = Gson().fromJson(
                requireContext().prefs.getString(ConstantHelper.usuarioLogin, null),
                LoginResponse::class.java
            )

            recuperar
                                        requireContext().prefs.edit().putString(ConstantHelper.usuarioLogin, Gson().toJson(response.data)).apply()