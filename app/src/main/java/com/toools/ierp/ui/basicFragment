import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.navigation.fragment.findNavController
import androidx.navigation.fragment.navArgs

@AndroidEntryPoint
class ClientesDetalladoFragment : Fragment() {

    private val args: ClientesDetalladoFragmentArgs by navArgs()
    private lateinit var binding: FragmentClientesDetalladoBinding

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        binding = FragmentClientesDetalladoBinding.inflate(inflater, container,false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        setUpView()
        setUpObservers()
    }

    fun setUpView() {
        binding.apply {
            buttonVolver.setOnClickListener {
                findNavController().
            }
        }
    }


     fun setUpObservers() {                                                             //SE USA VIEWLIFECYCLEOWNER PORQUE ES UN ACTIVITY
        homeViewModel.getMenuClienteLiveData.observe(viewLifecycleOwner) {
            when (it.status) {
                Resource.Status.LOADING -> {}
                Resource.Status.SUCCESS -> {
                    it.data?.let { response ->
                        if (response.isOK()) {
                            loadRecyclerEventos(response.clientes)
                        } else {
                            //TODO mostrar error obtener datos eventos
                        }
                    }
                }
                Resource.Status.ERROR -> {}
            }
        }
    }


    fun loadRecyclerEventos(listEventos: MutableList<Cliente>) {
        adapterEventos?.let {
            it.setList(listEventos)
        } ?: run {
            adapterEventos = AdapterEventosHome(requireContext(), listEventos) { evento ->
                val menuItem = MenuItem(evento, false)
                val action = HomeFragmentDirections.homeFragmentToWebFragment(menuItem)
                findNavController().navigate(action)
            }
        }

        binding?.eventosHomeRecyclerView?.adapter = adapterEventos
    }



}